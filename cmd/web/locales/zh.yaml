languages:
  - zh-Hans
  - cmn-Hans
  - zh-CN
messages:
  - key: |
      Auxiliary tool for github.com/issue9/web

      commands：
      {{commands}}

      flags：
      {{flags}}

      visit https://github.com/issue9/web for more info.
    message:
      msg: |
        框架 github.com/issue9/web 的辅助工具

        子命令：
        {{commands}}

        选项：
        {{flags}}

        更多信息可访问 https://github.com/issue9/web。
  - key: app args
    message:
      msg: 传递给应用的参数
  - key: build enum file
    message:
      msg: 为类型生成枚举内容
  - key: |-
      build enum file

      flags:
      {{flags}}
    message:
      msg: |-
        为类型生成枚举内容，诸如 Marshal、Unmarshal 和 String 等方法。

        选项：
        {{flags}}
  - key: command %s not found
    message:
      msg: |
        未找到子命令 %s
  - key: create new web project
    message:
      msg: 根据模板创建新项目
  - key: |-
      create new web project

      usage:

      web new [flags] tpl-path module-path

      flags:
      {{flags}}
    message:
      msg: |-
        根据模板创建新项目

        用法:

        web new [options] tpl-path module-path

        tpl-path 模板的地址，必须是一个合法的 go module 地址，且需要指定版本号，如果没有会自动添加 @latest；
        module-path 为生成的项目路径；

        options 可用参数:
        {{flags}}
  - key: description
    message:
      msg: 描述
  - key: dest is not empty
    message:
      msg: 项目目录已存在
  - key: dest locale files
    message:
      msg: 需要更新的文件列表。如果多个文件则以逗号分隔。
  - key: dev mode
    message:
      msg: 是否启用开发模式，具体可参考 comptime 下的说明。
  - key: exclude watch files
    message:
      msg: 不需要监视的文件，遵循 path.Match 规则。
  - key: export object name
    message:
      msg: 被导出的对象名
  - key: extract locale
    message:
      msg: 提取本地化内容
  - key: |
      extract usage

      flags：
      {{flags}}
    message:
      msg: |
        extract usage

        flags：
        {{flags}}
  - key: file format
    message:
      msg: 输出文件的格式，目前支持 JSON 和 YAML
  - key: gen filter method
    message:
      msg: 生成适配 github.com/issue9/web/filter 的相关方法
  - key: gen markdown
    message:
      msg: 生成 markdown 文档
  - key: gen openapi method
    message:
      msg: 生成适配 github.com/issue9/web/openapi 的相关方法
  - key: gen sql method
    message:
      msg: 生成适配 database/sql 的相关方法
  - key: language
    message:
      msg: 语言
  - key: locale func
    message:
      msg: 源代码中用于输出本地化信息的函数
  - key: locale struct tag
    message:
      msg: 指定用于本地化的结构体标签名称
  - key: |
      markdown usage

      usage:
        web mdoc [options]

        options:
        {{flags}}
    message:
      msg: |
        生成 markdown 文档

        语法:
          web mdoc [options]

          options 可用的参数:
          {{flags}}
  - key: no input file
    message:
      msg: 未指定输入文件
  - key: no src dir
    message:
      msg: 未指定源码目录
  - key: not allowed enum type
    message:
      msg: 不支持为该类型生成内容
  - key: not found enum type %s
    message:
      msg: 未找到枚举类型 %s
  - key: not found source in %s
    message:
      msg: 在 %s 中未找到符合要求的源码
  - key: not found type doc
    message:
      msg: 未找到类型的相关文档
  - key: not show ignore message
    message:
      msg: 不显示可忽略的消息
  - key: out dir
    message:
      msg: 输出目录
  - key: recursive dir
    message:
      msg: 递归访问子目录
  - key: select exts
    message:
      msg: 选择需要插入文件头的文件扩展名
  - key: set file header
    message:
      msg: 指定文件头内容
  - key: set input file
    message:
      msg: 指定输入文件
  - key: set markdown doc path
    message:
      msg: 指定输出文件
  - key: set markdown page description
    message:
      msg: 指定文档的描述，可以是 Markdown 格式
  - key: set markdown page language
    message:
      msg: 指定文档的语言
  - key: set markdown page title
    message:
      msg: 指定文档的标题
  - key: set output file
    message:
      msg: 指定输出文件，如果为空，则会根据输入文件名加上 _enums 作为后缀，比如 input.go 会以 input_enums.go 作为输出文件。
  - key: set source dir
    message:
      msg: 设置源码的路径
  - key: set the enum type
    message:
      msg: 指定用于生成枚举内容的类型
  - key: set watch file extension
    message:
      msg: 设置监视的文件扩展名
  - key: show current help info
    message:
      msg: 显示当前帮助信息
  - key: show help
    message:
      msg: 显示帮助信息
  - key: show info log
    message:
      msg: 显示提示信息
  - key: show version
    message:
      msg: 显示版本号
  - key: skip sub module
    message:
      msg: 忽略子模块的内容
  - key: src locale file
    message:
      msg: 指定源文件
  - key: the dest file %s is dir
    message:
      msg: 指定的翻译文件 %s 是一个目录
  - key: tpl-path or module-path not set
    message:
      msg: 模板或是项目的路径未指定
  - key: type
    message:
      msg: 类型
  - key: type not set
    message:
      msg: 未指定类型
  - key: unsupported file extension '%s'
    message:
      msg: 不支持的文件扩展名 '%s'
  - key: unsupported marshal for %s
    message:
      msg: 不支持 %s 的序列化
  - key: unsupported unmarshal for %s
    message:
      msg: 不支持 %s 的反序列化
  - key: update locale file
    message:
      msg: 更新本地化的文件
  - key: update locale file
    message:
      msg: 更新本地化的文件
  - key: |
      update locale file usage

      flags:
      {{flags}}
    message:
      msg: |
        依据源文件依次更新指定的本地化文件

        此操作将会把只存在于源文件中的翻译项添加至指定的目标文件中，
        而只存在于目标文件中的翻译项将被删除，一般在通过 locale
        提取完翻译项之后，可以调用此命令对所有的翻译内容进行一次更新。

        可用选项:
        {{flags}}
  - key: watch and reload
    message:
      msg: 热编译项目
  - key: watch and reload usage
    message:
      msg: |
        监视项目中的文件并在有修改的情况下重新编译项目

        web watch [options] [dir]

        options 可以为以下参数：
        {{flags}}

        dir 表示编译的代码，为 main 函数所在的目录或是文件。
        如果未指定，则采用当前目录。
  - key: watch frequency
    message:
      msg: 最小的文件修改间隔
  - key: watch.app
    message:
      msg: 应用
  - key: watch.compiler
    message:
      msg: 编译
  - key: watch.sys
    message:
      msg: 系统
